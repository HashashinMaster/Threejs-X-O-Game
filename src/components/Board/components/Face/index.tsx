/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 mask.glb -o face.tsx -t
Author: TetraVision (https://sketchfab.com/TetraVision)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/venetian-mask-1-df7119ee12c64cbe9c82e255c9471919
Title: Venetian Mask 1
*/

import * as THREE from "three";
import { useRef, useEffect } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import gsap from "gsap";
type GLTFResult = GLTF & {
  nodes: {
    Object_2: THREE.Mesh;
    Object_3: THREE.Mesh;
  };
  materials: {
    ["Scene_-_Root"]: THREE.MeshStandardMaterial;
  };
};

export function Face(props: JSX.IntrinsicElements["group"]) {
  const { nodes } = useGLTF("/models/mask.glb") as GLTFResult;
  const faceRef = useRef<THREE.Group>(null!);

  useEffect(() => {
    const tl = gsap.timeline({ repeat: -1, yoyo: true });
    tl.to(faceRef.current.position, {
      y: 0.4,
      duration: 2,
    });
  }, []);

  return (
    <group {...props} dispose={null} ref={faceRef}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.01}>
        <mesh
          geometry={nodes.Object_2.geometry}
          material={new THREE.MeshStandardMaterial({ color: "#1296ee" })}
        />
        <mesh
          geometry={nodes.Object_3.geometry}
          material={new THREE.MeshStandardMaterial({ color: "#1296ee" })}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/models/mask.glb");
